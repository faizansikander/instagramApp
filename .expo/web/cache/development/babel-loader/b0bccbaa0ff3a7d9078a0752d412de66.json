{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { USER_STATE_CHANGE, USER_POSTS_STATE_CHANGE, USER_FOLLOWING_STATE_CHANGE } from \"../constants/index\";\nimport firebase from 'firebase';\nexport function fetchUser() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      console.log('Snapshot variale', snapshot);\n\n      if (snapshot.exists) {\n        console.log('Now Snapshot Exists', snapshot.data());\n        dispatch({\n          type: USER_STATE_CHANGE,\n          currentUser: snapshot.data()\n        });\n      } else {\n        console.log('document does not exist');\n      }\n    });\n  };\n}\nexport function fetchUserPosts() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"posts\").doc(firebase.auth().currentUser.uid).collection(\"userPosts\").orderBy(\"creation\", \"asc\").get().then(function (snapshot) {\n      var posts = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      console.log('Show Posts', posts);\n      dispatch({\n        type: USER_POSTS_STATE_CHANGE,\n        posts: posts\n      });\n    });\n  };\n}\nexport function fetchUserFollowing() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").onSnapshot(function (snapshot) {\n      var following = snapshot.docs.map(function (doc) {\n        var id = doc.id;\n        return id;\n      });\n      console.log('Show Posts', posts);\n      dispatch({\n        type: USER_FOLLOWING_STATE_CHANGE,\n        following: following\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/tayyaba/Desktop/zenkoders/Faizan/React_Native/Instagram/redux/actions/index.js"],"names":["USER_STATE_CHANGE","USER_POSTS_STATE_CHANGE","USER_FOLLOWING_STATE_CHANGE","firebase","fetchUser","dispatch","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","console","log","exists","data","type","fetchUserPosts","orderBy","posts","docs","map","id","fetchUserFollowing","onSnapshot","following"],"mappings":";;;;;;AAAA,SAASA,iBAAT,EAA4BC,uBAA5B,EAAqDC,2BAArD;AACA,OAAOC,QAAP,MAAqB,UAArB;AAGA,OAAO,SAASC,SAAT,GAAqB;AAExB,SAAQ,UAACC,QAAD,EAAc;AAClBF,IAAAA,QAAQ,CAACG,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESL,QAAQ,CAACM,IAAT,GAAgBC,WAAhB,CAA4BC,GAFrC,EAGKC,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;AAEhBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,QAAhC;;AACA,UAAIA,QAAQ,CAACG,MAAb,EAAqB;AACjBF,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAQ,CAACI,IAAT,EAAnC;AACAb,QAAAA,QAAQ,CAAC;AAAEc,UAAAA,IAAI,EAAEnB,iBAAR;AAA2BU,UAAAA,WAAW,EAAEI,QAAQ,CAACI,IAAT;AAAxC,SAAD,CAAR;AACH,OAHD,MAGO;AACHH,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AACJ,KAbL;AAgBH,GAjBD;AAoBH;AAID,OAAO,SAASI,cAAT,GAA0B;AAE7B,SAAQ,UAACf,QAAD,EAAc;AAClBF,IAAAA,QAAQ,CAACG,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESL,QAAQ,CAACM,IAAT,GAAgBC,WAAhB,CAA4BC,GAFrC,EAGKJ,UAHL,CAGgB,WAHhB,EAIKc,OAJL,CAIa,UAJb,EAIyB,KAJzB,EAKKT,GALL,GAMKC,IANL,CAMU,UAACC,QAAD,EAAc;AAEhB,UAAIQ,KAAK,GAAGR,QAAQ,CAACS,IAAT,CAAcC,GAAd,CAAkB,UAAAhB,GAAG,EAAI;AACjC,YAAMU,IAAI,GAAGV,GAAG,CAACU,IAAJ,EAAb;AACA,YAAMO,EAAE,GAAGjB,GAAG,CAACiB,EAAf;AAEA;AAASA,UAAAA,EAAE,EAAFA;AAAT,WAAgBP,IAAhB;AACH,OALW,CAAZ;AAMAH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BM,KAA1B;AACAjB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAElB,uBAAR;AAAiCqB,QAAAA,KAAK,EAALA;AAAjC,OAAD,CAAR;AAKH,KApBL;AAuBH,GAxBD;AA2BH;AA6BD,OAAO,SAASI,kBAAT,GAA8B;AAEjC,SAAQ,UAACrB,QAAD,EAAc;AAClBF,IAAAA,QAAQ,CAACG,SAAT,GACKC,UADL,CACgB,WADhB,EAEKC,GAFL,CAESL,QAAQ,CAACM,IAAT,GAAgBC,WAAhB,CAA4BC,GAFrC,EAGKJ,UAHL,CAGgB,eAHhB,EAKKoB,UALL,CAKgB,UAACb,QAAD,EAAc;AAEtB,UAAIc,SAAS,GAAGd,QAAQ,CAACS,IAAT,CAAcC,GAAd,CAAkB,UAAAhB,GAAG,EAAI;AAErC,YAAMiB,EAAE,GAAGjB,GAAG,CAACiB,EAAf;AAEA,eAAQA,EAAR;AACH,OALe,CAAhB;AAMAV,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BM,KAA1B;AACAjB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAEjB,2BAAR;AAAqC0B,QAAAA,SAAS,EAATA;AAArC,OAAD,CAAR;AAKH,KAnBL;AAsBH,GAvBD;AA0BH","sourcesContent":["import { USER_STATE_CHANGE, USER_POSTS_STATE_CHANGE ,USER_FOLLOWING_STATE_CHANGE} from '../constants/index'\nimport firebase from 'firebase'\n\n\nexport function fetchUser() {\n    \n    return ((dispatch) => {\n        firebase.firestore()\n            .collection(\"users\")\n            .doc(firebase.auth().currentUser.uid)\n            .get()\n            .then((snapshot) => {\n                //    alert(firebase.auth().currentUser.uid);\n                console.log('Snapshot variale', snapshot)\n                if (snapshot.exists) {\n                    console.log('Now Snapshot Exists', snapshot.data())\n                    dispatch({ type: USER_STATE_CHANGE, currentUser: snapshot.data() })\n                } else {\n                    console.log('document does not exist')\n                }\n            })\n\n\n    }\n\n    )\n}\n//---\n\n\nexport function fetchUserPosts() {\n     \n    return ((dispatch) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(firebase.auth().currentUser.uid)\n            .collection(\"userPosts\")\n            .orderBy(\"creation\", \"asc\")\n            .get()\n            .then((snapshot) => {\n\n                let posts = snapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n\n                    return { id, ...data }\n                })\n                console.log('Show Posts', posts)\n                dispatch({ type: USER_POSTS_STATE_CHANGE, posts })\n\n\n\n                 \n            })\n\n\n    }\n\n    )\n}\n\n\n// export function fetchUser() {\n//     console.log('Action start')\n//     return ((dispatch) => {\n//         firebase.firestore()\n//             .collection(\"users\")\n//             .doc(firebase.auth().currentUser.uid)\n//             .get()\n//             .then((snapshot) => {\n//                 //    alert(firebase.auth().currentUser.uid);\n//                 console.log('Snapshot variale', snapshot)\n//                 if (snapshot.exists) {\n//                     console.log('Now Snapshot Exists', snapshot.data())\n//                     dispatch({ type: USER_STATE_CHANGE, currentUser: snapshot.data() })\n//                 } else {\n//                     console.log('document does not exist')\n//                 }\n//             })\n\n\n//     }\n\n//     )\n// }\n//---\n\n\nexport function fetchUserFollowing() {\n     \n    return ((dispatch) => {\n        firebase.firestore()\n            .collection(\"following\")\n            .doc(firebase.auth().currentUser.uid)\n            .collection(\"userFollowing\")          \n            \n            .onSnapshot((snapshot) => {\n\n                let following = snapshot.docs.map(doc => {\n                    \n                    const id = doc.id;\n\n                    return  id\n                })\n                console.log('Show Posts', posts)\n                dispatch({ type: USER_FOLLOWING_STATE_CHANGE, following })\n\n\n\n                 \n            })\n\n\n    }\n\n    )\n}"]},"metadata":{},"sourceType":"module"}