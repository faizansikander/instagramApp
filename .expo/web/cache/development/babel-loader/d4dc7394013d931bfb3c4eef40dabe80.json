{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nexport default function Comment(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  useEffect(function () {\n    if (props.route.params.postId !== postId) {\n      firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setComments(comments);\n      });\n      setPostId(props.route.params.postId);\n    }\n  }, [props.route.params.postId]);\n  return;\n  React.createElement(View, null, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, null, React.createElement(Text, null, item.text));\n    }\n  }), React.createElement(View, null, React.createElement(TextInput, {\n    placeholder: \"comment...\"\n  })));\n}","map":{"version":3,"sources":["/Users/zeeshan/Downloads/Instagram-main/components/main/Comment.js"],"names":["React","useState","useEffect","firebase","require","Comment","props","comments","setComments","postId","setPostId","text","setText","route","params","firestore","collection","doc","uid","get","then","snapshot","docs","map","data","id","item"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,kBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAwBT,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAAnB,KAA8BA,MAAlC,EAA0C;AACxCN,MAAAA,QAAQ,CACLY,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,GAHH,CAGOX,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBI,GAH1B,EAIGF,UAJH,CAIc,WAJd,EAKGC,GALH,CAKOX,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAL1B,EAMGO,UANH,CAMc,UANd,EAOGG,GAPH,GAQGC,IARH,CAQQ,UAACC,QAAD,EAAc;AAClB,YAAId,QAAQ,GAAGc,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAACN,GAAD,EAAS;AACxC,cAAMO,IAAI,GAAGP,GAAG,CAACO,IAAJ,EAAb;AACA,cAAMC,EAAE,GAAGR,GAAG,CAACQ,EAAf;AAEA;AAASA,YAAAA,EAAE,EAAFA;AAAT,aAAgBD,IAAhB;AACD,SALc,CAAf;AAMAhB,QAAAA,WAAW,CAACD,QAAD,CAAX;AACD,OAhBH;AAiBAG,MAAAA,SAAS,CAACJ,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAApB,CAAT;AACD;AACF,GArBQ,EAqBN,CAACH,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAApB,CArBM,CAAT;AAuBA;AACA,sBAAC,IAAD,QACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,IAAI,EAAEF,QAHR;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGmB,IAAH,QAAGA,IAAH;AAAA,aACZ,oBAAC,IAAD,QACA,oBAAC,IAAD,QAAOA,IAAI,CAACf,IAAZ,CADA,CADY;AAAA;AAJd,IADF,EAaE,oBAAC,IAAD,QACI,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC;AADd,IADJ,CAbF;AAsBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text,  FlatList, Button, TextInput } from \"react-native\";\n\nimport firebase from \"firebase\";\nrequire(\"firebase/firestore\");\n\nexport default function Comment(props) {\n  const [comments, setComments] = useState([]);\n  const [postId, setPostId] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    if (props.route.params.postId !== postId) {\n      firebase\n        .firestore()\n        .collection(\"posts\")\n        .doc(props.route.params.uid)\n        .collection(\"userPosts\")\n        .doc(props.route.params.postId)\n        .collection(\"comments\")\n        .get()\n        .then((snapshot) => {\n          let comments = snapshot.docs.map((doc) => {\n            const data = doc.data();\n            const id = doc.id;\n\n            return { id, ...data };\n          });\n          setComments(comments);\n        });\n      setPostId(props.route.params.postId);\n    }\n  }, [props.route.params.postId]);\n\n  return;\n  <View>\n    <FlatList\n      numColumns={1}\n      horizontal={false}\n      data={comments}\n      renderItem={({ item }) => \n      <View>\n      <Text>{item.text}</Text>\n\n      </View>\n    }\n    />\n\n    <View>\n        <TextInput \n          placeholder='comment...'/>\n\n    </View>\n\n\n\n  </View>;\n}\n"]},"metadata":{},"sourceType":"module"}