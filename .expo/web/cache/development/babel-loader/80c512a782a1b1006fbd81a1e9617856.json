{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { fetchUsersData } from \"../../redux/actions/index\";\n\nfunction Comment(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  useEffect(function () {\n    function matchUserToComment(comments) {\n      for (var i = 0; i < comments.length; i++) {}\n    }\n\n    if (props.route.params.postId !== postId) {\n      firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setComments(comments);\n      });\n      setPostId(props.route.params.postId);\n    }\n  }, [props.route.params.postId]);\n\n  var onCommentSend = function onCommentSend() {\n    firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").add({\n      creator: firebase.auth().currentUser.uid,\n      text: text\n    });\n  };\n\n  return React.createElement(View, null, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, null, React.createElement(Text, null, item.text));\n    }\n  }), React.createElement(View, null, React.createElement(TextInput, {\n    placeholder: \"comment...\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return onCommentSend();\n    },\n    title: \"Send\"\n  })));\n}","map":{"version":3,"sources":["/Users/tayyaba/Desktop/zenkoders/Faizan/Instagram/components/main/Comment.js"],"names":["React","useState","useEffect","firebase","require","connect","bindActionCreators","fetchUsersData","Comment","props","comments","setComments","postId","setPostId","text","setText","matchUserToComment","i","length","route","params","firestore","collection","doc","uid","get","then","snapshot","docs","map","data","id","onCommentSend","add","creator","auth","currentUser","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text,  FlatList, Button, TextInput } from \"react-native\";\n\nimport firebase from \"firebase\";\nrequire(\"firebase/firestore\");\n\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { fetchUsersData } from \"../../redux/actions/index\";\n\n\nfunction Comment(props) {\n  const [comments, setComments] = useState([]);\n  const [postId, setPostId] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n\n\n    function matchUserToComment(comments){\n\n      for(let i = 0; i < comments.length; i++ ) {\n\n\n\n      }  \n\n    }\n\n\n\n\n\n\n    if (props.route.params.postId !== postId) {\n      firebase\n        .firestore()\n        .collection(\"posts\")\n        .doc(props.route.params.uid)\n        .collection(\"userPosts\")\n        .doc(props.route.params.postId)\n        .collection(\"comments\")\n        .get()\n        .then((snapshot) => {\n          let comments = snapshot.docs.map((doc) => {\n            const data = doc.data();\n            const id = doc.id;\n\n            return { id, ...data };\n          });\n          setComments(comments);\n        });\n      setPostId(props.route.params.postId);\n    }\n  }, [props.route.params.postId]);\n\n\n\n  const onCommentSend = () => {\n    firebase\n    .firestore()\n    .collection(\"posts\")\n    .doc(props.route.params.uid)\n    .collection(\"userPosts\")\n    .doc(props.route.params.postId)\n    .collection(\"comments\")\n    .add({\n          creator:  firebase.auth().currentUser.uid,\n          text \n    }\n\n    )\n\n  }\n\n  return(\n\n  \n  <View>\n    <FlatList\n      numColumns={1}\n      horizontal={false}\n      data={comments}\n      renderItem={({ item }) => \n      <View>\n      <Text>{item.text}</Text>\n\n      </View>\n    }\n    />\n\n    <View>\n        <TextInput \n          placeholder='comment...'\n          onChangeText={(text) => setText(text)}/>\n\n          <Button onPress={() =>  onCommentSend()}\n                  title=\"Send\"\n          />\n\n    </View>\n\n\n\n  </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}