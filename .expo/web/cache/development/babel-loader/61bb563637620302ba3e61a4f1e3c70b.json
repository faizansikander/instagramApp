{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebase from \"firebase\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBpE9NIRlBCRw2Cc6xWHR65U-uhLFWCUaM\",\n  authDomain: \"instagram-dev-abe87.firebaseapp.com\",\n  projectId: \"instagram-dev-abe87\",\n  storageBucket: \"instagram-dev-abe87.appspot.com\",\n  messagingSenderId: \"1095811219957\",\n  appId: \"1:1095811219957:web:3ea322b87b691d0d8d20bc\",\n  measurementId: \"G-XE87PWRQ67\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport MainScreen from \"./components/Main\";\nimport LoginScreen from \"./components/auth/Login\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nimport CommentScreen from \"./components/main/Comment\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }, React.createElement(Text, null, \"Loading....\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\"\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store\n      }, React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\"\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        name: \"Comment\",\n        component: CommentScreen,\n        navigation: this.props.navigation\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/Users/zeeshan/Downloads/Instagram-main/App.js"],"names":["React","Component","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","createStackNavigator","NavigationContainer","LandingScreen","RegisterScreen","MainScreen","LoginScreen","AddScreen","SaveScreen","CommentScreen","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","alignItems","headerShown","navigation"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\n\n//import {View,Text} from 'react-native';\n\nimport firebase from \"firebase\"\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBpE9NIRlBCRw2Cc6xWHR65U-uhLFWCUaM\",\n  authDomain: \"instagram-dev-abe87.firebaseapp.com\",\n  projectId: \"instagram-dev-abe87\",\n  storageBucket: \"instagram-dev-abe87.appspot.com\",\n  messagingSenderId: \"1095811219957\",\n  appId: \"1:1095811219957:web:3ea322b87b691d0d8d20bc\",\n  measurementId: \"G-XE87PWRQ67\"\n};\n\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport LandingScreen from './components/auth/Landing';\nimport RegisterScreen from './components/auth/Register';\nimport MainScreen from './components/Main'\nimport LoginScreen from './components/auth/Login'\nimport AddScreen from './components/main/Add'\nimport SaveScreen from './components/main/Save';\nimport CommentScreen from './components/main/Comment';\n\nconst Stack = createStackNavigator();\n\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      loaded: false\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true\n        })\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true\n        })\n      }\n\n    }\n    )\n\n  }\n\n\n\n  render() {\n\n    const { loggedIn, loaded } = this.state;\n    //console.log('Loaded Variable -',loaded);\n    if (!loaded) {\n\n      return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n          <Text>Loading....</Text>\n        </View>\n      )\n    }\n\n\n\n    if (!loggedIn) {\n      return (\n\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Landing\">\n            <Stack.Screen name=\"Landing\" component={LandingScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n            \n          </Stack.Navigator>\n        </NavigationContainer>\n\n      );\n\n    }\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Main\">\n            <Stack.Screen name=\"Main\" component={MainScreen} /*options={{ headerShown: false }}*/ />\n            <Stack.Screen name=\"Add\" component={AddScreen}  navigation={this.props.navigation}  />\n            <Stack.Screen name=\"Save\" component={SaveScreen} navigation={this.props.navigation}    />\n            <Stack.Screen name=\"Comment\" component={CommentScreen} navigation={this.props.navigation}    /> \n\n            \n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n\n\n\n\n\n    )\n\n\n\n\n\n  }\n}\n\nexport default App\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}