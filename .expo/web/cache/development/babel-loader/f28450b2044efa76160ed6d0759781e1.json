{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from 'firebase';\nexport var Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: '',\n      name: ''\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          name = _this$state.name;\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n          name: name,\n          email: email\n        });\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, null, React.createElement(TextInput, {\n        placeholder: \"name\",\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.onSignUp();\n        },\n        title: \"Sign Up\"\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\nexport default Register;","map":{"version":3,"sources":["/Users/tayyaba/Desktop/zenkoders/Faizan/React_Native/Instagram/components/auth/Register.js"],"names":["React","Component","firebase","Register","props","state","email","password","name","onSignUp","bind","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","console","log","catch","error","setState"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;AAEA,WAAaC,QAAb;AAAA;;AAAA;;AACE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAc;AACVC,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,QAAQ,EAAE,EAFA;AAGVC,MAAAA,IAAI,EAAE;AAHI,KAAd;AAMF,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AATiB;AAWlB;;AAZH;AAAA;AAAA,WAcE,oBAAW;AAET,wBAAoC,KAAKL,KAAzC;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAgBC,QAAhB,eAAgBA,QAAhB;AAAA,UAA2BC,IAA3B,eAA2BA,IAA3B;AACAN,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAA+CN,KAA/C,EAAuDC,QAAvD,EACCM,IADD,CACM,UAACC,MAAD,EAAa;AACdZ,QAAAA,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EACSC,GADT,CACaf,QAAQ,CAACS,IAAT,GAAgBO,WAAhB,CAA4BC,GADzC,EAESC,GAFT,CAEa;AACCZ,UAAAA,IAAI,EAAJA,IADD;AAECF,UAAAA,KAAK,EAALA;AAFD,SAFb;AAUDe,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEH,OAdD,EAeCS,KAfD,CAeO,UAACC,KAAD,EAAW;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OAjBD;AAoBD;AArCH;AAAA;AAAA,WAwCI,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD,QACI,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,MADd;AAEE,QAAA,YAAY,EAAG,sBAAChB,IAAD;AAAA,iBAAU,MAAI,CAACiB,QAAL,CAAc;AAACjB,YAAAA,IAAI,EAAJA;AAAD,WAAd,CAAV;AAAA;AAFjB,QADJ,EAOI,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,YAAY,EAAG,sBAACF,KAAD;AAAA,iBAAW,MAAI,CAACmB,QAAL,CAAc;AAACnB,YAAAA,KAAK,EAALA;AAAD,WAAd,CAAX;AAAA;AAFjB,QAPJ,EAYI,oBAAC,SAAD;AACA,QAAA,WAAW,EAAC,UADZ;AAEA,QAAA,eAAe,EAAE,IAFjB;AAGA,QAAA,YAAY,EAAG,sBAACC,QAAD;AAAA,iBAAc,MAAI,CAACkB,QAAL,CAAc;AAAClB,YAAAA,QAAQ,EAARA;AAAD,WAAd,CAAd;AAAA;AAHf,QAZJ,EAmBI,oBAAC,MAAD;AACM,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,QAAL,EAAN;AAAA,SADf;AAEM,QAAA,KAAK,EAAC;AAFZ,QAnBJ,CADJ;AAkCH;AA3EL;;AAAA;AAAA,EAA8BR,SAA9B;AA8EA,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport {View,Button,TextInput} from 'react-native'\n\nimport firebase from 'firebase'\n\nexport class Register extends Component {\n  constructor(props) {\n      super(props);\n\n      this.state  = {\n          email: '',\n          password: '',\n          name: ''\n      }\n\n    this.onSignUp = this.onSignUp.bind(this)\n\n  }\n\n  onSignUp() {\n\n    const { email , password , name } = this.state;\n    firebase.auth().createUserWithEmailAndPassword(email , password)\n    .then((result)  => {\n         firebase.firestore().collection(\"users\")\n                 .doc(firebase.auth().currentUser.uid)\n                 .set({\n                       name,\n                       email\n\n\n                 })\n\n\n        console.log(result)\n\n    })\n    .catch((error) => {\n        console.log(error)\n    }\n    )\n\n  }\n\n\n    render() {\n        return (\n            <View>\n                <TextInput \n                  placeholder=\"name\"\n                  onChangeText= {(name) => this.setState({name})}\n                \n                />\n\n                <TextInput\n                  placeholder=\"email\"\n                  onChangeText= {(email) => this.setState({email})}                  \n                />\n\n                <TextInput\n                placeholder=\"password\" \n                secureTextEntry={true}\n                onChangeText= {(password) => this.setState({password})}\n                />\n\n\n                <Button \n                      onPress={() => this.onSignUp()}\n                      title=\"Sign Up\"\n                />\n\n\n            \n\n\n\n\n\n            </View>\n        )\n    }\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}