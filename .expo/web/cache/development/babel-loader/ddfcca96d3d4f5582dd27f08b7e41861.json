{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nexport default function Comment(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  useEffect(function () {}, [props.route.params.postId]);\n\n  var onCommentSend = function onCommentSend() {\n    firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").add({\n      creator: firebase.auth().currentUser.uid,\n      text: text\n    });\n  };\n\n  return;\n  React.createElement(View, null, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, null, React.createElement(Text, null, item.text));\n    }\n  }), React.createElement(View, null, React.createElement(TextInput, {\n    placeholder: \"comment...\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return onCommentSend();\n    },\n    title: \"Send\"\n  })));\n}","map":{"version":3,"sources":["/Users/zeeshan/Downloads/Instagram-main/components/main/Comment.js"],"names":["React","useState","useEffect","firebase","require","Comment","props","comments","setComments","postId","setPostId","text","setText","route","params","onCommentSend","firestore","collection","doc","uid","add","creator","auth","currentUser","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,kBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAwBT,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEAV,EAAAA,SAAS,CAAC,YAAM,CAqBf,CArBQ,EAqBN,CAACI,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MAApB,CArBM,CAAT;;AAyBA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BZ,IAAAA,QAAQ,CACPa,SADD,GAECC,UAFD,CAEY,OAFZ,EAGCC,GAHD,CAGKZ,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBK,GAHxB,EAICF,UAJD,CAIY,WAJZ,EAKCC,GALD,CAKKZ,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBL,MALxB,EAMCQ,UAND,CAMY,UANZ,EAOCG,GAPD,CAOK;AACCC,MAAAA,OAAO,EAAGlB,QAAQ,CAACmB,IAAT,GAAgBC,WAAhB,CAA4BJ,GADvC;AAECR,MAAAA,IAAI,EAAJA;AAFD,KAPL;AAcD,GAfD;;AAiBA;AACA,sBAAC,IAAD,QACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,IAAI,EAAEJ,QAHR;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGiB,IAAH,QAAGA,IAAH;AAAA,aACZ,oBAAC,IAAD,QACA,oBAAC,IAAD,QAAOA,IAAI,CAACb,IAAZ,CADA,CADY;AAAA;AAJd,IADF,EAaE,oBAAC,IAAD,QACI,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,YADd;AAEE,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUC,OAAO,CAACD,IAAD,CAAjB;AAAA;AAFhB,IADJ,EAKM,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAOI,aAAa,EAApB;AAAA,KAAjB;AACQ,IAAA,KAAK,EAAC;AADd,IALN,CAbF;AA2BD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text,  FlatList, Button, TextInput } from \"react-native\";\n\nimport firebase from \"firebase\";\nrequire(\"firebase/firestore\");\n\nexport default function Comment(props) {\n  const [comments, setComments] = useState([]);\n  const [postId, setPostId] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    // if (props.route.params.postId !== postId) {\n    //   firebase\n    //     .firestore()\n    //     .collection(\"posts\")\n    //     .doc(props.route.params.uid)\n    //     .collection(\"userPosts\")\n    //     .doc(props.route.params.postId)\n    //     .collection(\"comments\")\n    //     .get()\n    //     .then((snapshot) => {\n    //       let comments = snapshot.docs.map((doc) => {\n    //         const data = doc.data();\n    //         const id = doc.id;\n\n    //         return { id, ...data };\n    //       });\n    //       setComments(comments);\n    //     });\n    //   setPostId(props.route.params.postId);\n    // }\n  }, [props.route.params.postId]);\n\n\n\n  const onCommentSend = () => {\n    firebase\n    .firestore()\n    .collection(\"posts\")\n    .doc(props.route.params.uid)\n    .collection(\"userPosts\")\n    .doc(props.route.params.postId)\n    .collection(\"comments\")\n    .add({\n          creator:  firebase.auth().currentUser.uid,\n          text \n    }\n\n    )\n\n  }\n\n  return\n  <View>\n    <FlatList\n      numColumns={1}\n      horizontal={false}\n      data={comments}\n      renderItem={({ item }) => \n      <View>\n      <Text>{item.text}</Text>\n\n      </View>\n    }\n    />\n\n    <View>\n        <TextInput \n          placeholder='comment...'\n          onChangeText={(text) => setText(text)}/>\n\n          <Button onPress={() =>  onCommentSend()}\n                  title=\"Send\"\n          />\n\n    </View>\n\n\n\n  </View>;\n}\n"]},"metadata":{},"sourceType":"module"}